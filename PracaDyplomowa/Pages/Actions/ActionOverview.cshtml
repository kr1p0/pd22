@page
@model PracaDyplomowa.Pages.Actions.ActionOverviewModel
@{
}
@using PracaDyplomowa.Models


<!--for js communication-->
<input class="backendALert" type="hidden" runat="server" value="@Model.passAlert">
<input type="hidden" value="@Model.selectedUserId" id="ActionOverviewSelectedUserId" />

<body onload="onloadAction()">

    <div class="upperMenuBar">
        <div class="dropdown">
            <button class="btn btn-light btn-sm dropdown-toggle dropdownMenuMenuBar" type="button"
                    data-toggle="dropdown" aria-expanded="false">
            </button>
            <div class="dropdown-menu shadow p-3" aria-labelledby="dropdownMenuButton"
                 style="background-color: #f0f2f5; border: solid thin #d0d2d5 ">
                <form method="post">
                    <p class=" bg-dark text-white p-1" style="border-radius:4px">Filtruj:</p>
                    <div class="custom-control custom-radio mb-1">
                        <input type="radio" id="ActionCustomRadioFilter1" name="ActionCustomRadioFilter"
                               class="custom-control-input" value="pozar" >
                        <label class="custom-control-label" style="white-space:nowrap"
                               for="ActionCustomRadioFilter1">@Models.ActionType.Pozar</label>
                    </div>
                    <div class="custom-control custom-radio mb-1">
                        <input type="radio" id="ActionCustomRadioFilter2" name="ActionCustomRadioFilter"
                               class="custom-control-input" value="zdarzenieDrogowe">
                        <label class="custom-control-label" style="white-space:nowrap"
                               for="ActionCustomRadioFilter2">@Models.ActionType.ZdarzenieDrogowe</label>
                    </div>

                     <div class="custom-control custom-radio mb-1">
                        <input type="radio" id="ActionCustomRadioFilter3" name="ActionCustomRadioFilter"
                               class="custom-control-input" value="miejsceZagrozenia">
                        <label class="custom-control-label" style="white-space:nowrap"
                               for="ActionCustomRadioFilter3">@Models.ActionType.MiejsceZagrozenia</label>
                    </div>

                     <div class="custom-control custom-radio mb-1">
                        <input type="radio" id="ActionCustomRadioFilter4" name="ActionCustomRadioFilter"
                               class="custom-control-input" value="falszywyAlarm">
                        <label class="custom-control-label" style="white-space:nowrap"
                               for="ActionCustomRadioFilter4">@Models.ActionType.FalszywyAlarm</label>
                    </div>

                    <div class="custom-control custom-radio mb-1">
                        <input type="radio" id="ActionCustomRadioFilter5" name="ActionCustomRadioFilter"
                               class="custom-control-input" value="all" checked>
                        <label class="custom-control-label" style="white-space:nowrap"
                               for="ActionCustomRadioFilter5">Wszystkie</label>
                    </div>
               

                    <p class="bg-dark text-white p-1 " style="border-radius:4px">Sortuj:</p>
                    <div class="custom-control custom-radio mb-1">
                        <input type="radio" id="ActionCustomRadioSort1" name="ActionCustomRadioSort" value="typZdarzenia"
                               class="custom-control-input">
                        <label class="custom-control-label" for="ActionCustomRadioSort1">Typ zdarzenia</label>
                    </div>
                    <div class="custom-control custom-radio mb-1">
                        <input type="radio" id="ActionCustomRadioSort2" name="ActionCustomRadioSort" value="czasZdarzenia"
                               class="custom-control-input" checked>
                        <label class="custom-control-label" for="ActionCustomRadioSort2">Data</label>
                    </div>
        

                    <input type="submit" style="width:100%" class="btn btn-dark" value="Zapisz"
                           asp-page-handler="SaveDisplayOptions" asp-route-selectedTablePage = "1" 
                           asp-route-selectedUserId="@Model.selectedUserId" />
                </form>
            </div>
        </div>


      

        
        @if (string.IsNullOrEmpty(Model.selectedUserId))
        {

        <a class="btn btn-secondary btn-sm ml-3" style="color:white" title="Dodaj" asp-page="/Actions/AddAction">
            Dodaj
        </a>
        }
        else
        {
              <a class="btn btn-secondary btn-sm ml-3" style="color:white" title="Dodaj" 
                 onclick="assignActionToMemberTableSave()" href="javascript:void('')">
                Zapisz
            </a>
        }

      
        <form method="post" style="width:100%">
            @if (Model.tablePagesCount <= 1)
            {
                <input type="search" id="searchActionOverviewInput" placeholder="Szukaj"
                        style="float: right; width: 40%; min-width: 58px;" asp-for="@Model.searchActionOverviewInput"
                        class="btn btn-sm btn-light" oninput="searchActionOverview()" />
            }
            else
            {
                    <input type="search" id="searchActionOverviewInput" placeholder="Szukaj"
                        style="float: right; width: 40%; min-width: 58px;" asp-for="@Model.searchActionOverviewInput"
                        class="btn btn-sm btn-light"  />
            }

            @if (Model.tablePagesCount > 1)
            {
                <input type="submit" class="searchActionInp"  value="" asp-page-handler="SearchSql" />
            }
        </form>
        
    </div>

        @for(int i = 0; i < Model.tablePagesCount; i++)
        {
            if (Model.tablePagesCount == 1)
            {
                continue;
            }
            <a asp-route-selectedTablePage="@(i+1)"  
            asp-route-selectedUserId=@Model.selectedUserId
            asp-page="/Actions/ActionOverview">@(i+1+" ")</a>
        }

    <div class="innerContainer" style=" overflow-x: auto;">
       

        @{
            if (@Model.ListOfActions.Count == 0)
            {
                <div class="row  justify-content-center mt-4" style="width:100%">
                    <h3> BRAK AKCJI </h3>
                </div>

                return;
            }

        }

        @if(string.IsNullOrEmpty(Model.selectedUserId))
        {
        <table id="ActionTable" class="tableDefault"  style=" overflow-x: auto;">
            <thead>
                <tr style="position: sticky; top: 0;">
                    <th scope="col">Lp.</th>
                    <th scope="col">Typ zdarzenia</th>
                    <th scope="col">Data Zdarzenia</th>
                    <th scope="col">Czas trwania</th>
                    <th scope="col">Uczestników</th>
                    <th scope="col">Akcja</th>
                </tr>
            </thead>


            @{
                if(Model.selectedTablePage < 1)
                {
                    Model.selectedTablePage = 1;
                }
                var count = (@Model.selectedTablePage-1)*Model.rowsOnPage;
                for (int i = 0; i < Model.ListOfActions.Count; i++)
                {
                    count++;
                    string czasTrwaniaHours = "┅";
                    string czasTrwaniaMinutes = "┅";
                    string progress = "0";
                    try
                    {
                        if (!string.IsNullOrEmpty(@Model.ListOfActions[i].CzasZakonczenia)
                        && !string.IsNullOrEmpty(@Model.ListOfActions[i].CzasZdarzenia))
                        {
                            var roznica = Convert.ToDateTime(@Model.ListOfActions[i].CzasZakonczenia).
                            Subtract(Convert.ToDateTime(@Model.ListOfActions[i].CzasZdarzenia)).TotalMinutes;

                            var czasTrwania = Convert.ToInt32(roznica);
                            czasTrwaniaHours = (czasTrwania / 60).ToString() + "h";
                            czasTrwaniaMinutes = (czasTrwania % 60).ToString() + "min";
                            progress = czasTrwania * 100 / 720 + "%";
                        }
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine("ActionOverviewRazor Error converting ToDateTime" + ex.Message);
                        czasTrwaniaHours = "┅";
                        czasTrwaniaMinutes = "┅";
                        progress = "0";
                    }

                    <tbody>
                        <tr class="" style=" cursor: pointer">
                            <td data-label="Lp.">
                                @(count+".")
                                <input type="hidden" value=@Model.ListOfActions[i].Id />
                            </td>

                            <td data-label="Typ zdarzenia">@CustomStr.Adjust(@Model.ListOfActions[i].TypZdarzenia,25)</td>

                            <td data-label="Data Zdarzenia">@CustomStr.Adjust(@Model.ListOfActions[i].CzasZdarzenia, 20)</td>

                            <td data-label="Czas trwania">
                                @(czasTrwaniaHours +" : "+ czasTrwaniaMinutes)
                                <div class="progress">
                                    <div class="progress-bar " role="progressbar" style="width: @progress;background-color:#0087ff"
                                         aria-valuenow="2" aria-valuemin="0" aria-valuemax="12"></div>
                                </div>
                            </td>

                            <td data-label="Uczestników">@CustomStr.Adjust(@Model.ListOfActions[i].IloscUczestnikow)</td>

                            <td data-label="Akcja">
                                <div class="tableButtonCellContainerInline">
                                    
                                    <div class="tableButtonCell">
                                        <a id="" class="btn btn-outline-secondary tableButtonEdit"
                                           title="Edytuj" asp-route-selectedActionId="@Model.ListOfActions[i].Id"
                                           asp-page="/Actions/EditAction"> </a>
                                    </div>
                                </div>
                            </td>

                        </tr>
                    </tbody>
                }
            }

        </table>
        }



        else if(!string.IsNullOrEmpty(Model.selectedUserId))
        {
        <table id="assignActionsToMemberTable" class="tableDefault"  style=" overflow-x: auto;">
            <thead>
                <p style="text-align:center; font-size:1.2em;font-weight:700; background-color:#585e73;color:white; font-family: monospace">EDYTUJ AKCJE PRZYPISANE DO UŻYTKOWNIKA</p>
                <tr style="position: sticky; top: 0;">
                    <th scope="col">Dodaj</th>
                    <th scope="col">Typ zdarzenia</th>
                    <th scope="col">Data Zdarzenia</th>
                    <th scope="col">Czas trwania</th>
                    <th scope="col">Uczestników</th>
                </tr>
            </thead>


            @{
                if(Model.selectedTablePage < 1)
                {
                    Model.selectedTablePage = 1;
                }
                var count = (@Model.selectedTablePage-1)*Model.rowsOnPage;
                for (int i = 0; i < Model.ListOfActions.Count; i++)
                {
                    count++;
                    string czasTrwaniaHours = "┅";
                    string czasTrwaniaMinutes = "┅";
                    string progress = "0";
                    try
                    {
                        if (!string.IsNullOrEmpty(@Model.ListOfActions[i].CzasZakonczenia)
                        && !string.IsNullOrEmpty(@Model.ListOfActions[i].CzasZdarzenia))
                        {
                            var roznica = Convert.ToDateTime(@Model.ListOfActions[i].CzasZakonczenia).
                            Subtract(Convert.ToDateTime(@Model.ListOfActions[i].CzasZdarzenia)).TotalMinutes;

                            var czasTrwania = Convert.ToInt32(roznica);
                            czasTrwaniaHours = (czasTrwania / 60).ToString() + "h";
                            czasTrwaniaMinutes = (czasTrwania % 60).ToString() + "min";
                            progress = czasTrwania * 100 / 720 + "%";
                        }
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine("ActionOverviewRazor Error converting ToDateTime" + ex.Message);
                        czasTrwaniaHours = "┅";
                        czasTrwaniaMinutes = "┅";
                        progress = "0";
                    }

                    <tbody>
                        <tr class="" style=" cursor: pointer">

                                @if (Model.ListOfActionIdAssignedToMember.Contains(Model.ListOfActions[i].Id))
                                {
                                    <td data-label="Dodaj">
                                        <input type="checkbox" checked class="ActionCheckBox"
                                        onclick="return false;" />
                                    </td> 
                                }
                                else
                                {
                                    <td data-label="Dodaj">
                                        <input type="checkbox" class="ActionCheckBox"
                                        onclick="return false;" />
                                    </td>
                                }


                            <td data-label="Typ zdarzenia">
                                @CustomStr.Adjust(@Model.ListOfActions[i].TypZdarzenia)
                                 <input type="hidden" value="@Model.ListOfActions[i].Id" readonly />
                                </td>

                            <td data-label="Data Zdarzenia">@CustomStr.Adjust(@Model.ListOfActions[i].CzasZdarzenia, 20)</td>

                            <td data-label="Czas trwania">
                                @(czasTrwaniaHours +" : "+ czasTrwaniaMinutes)
                                <div class="progress">
                                    <div class="progress-bar " role="progressbar" style="width: @progress;background-color:#0087ff"
                                         aria-valuenow="2" aria-valuemin="0" aria-valuemax="12"></div>
                                </div>
                            </td>

                            <td data-label="Uczestników">@CustomStr.Adjust(@Model.ListOfActions[i].IloscUczestnikow)</td>

                        </tr>
                    </tbody>
                }
            }

        </table>
        }



    </div>
    

</body>